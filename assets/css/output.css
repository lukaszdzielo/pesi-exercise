/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@font-face {
  font-display: swap;
  font-family: "Nunito";
  font-style: normal;
  font-weight: 400;
  src: url("/assets/fonts/nunito-v32-latin-ext-regular.woff2") format("woff2");
}
@font-face {
  font-display: swap;
  font-family: "Nunito";
  font-style: normal;
  font-weight: 700;
  src: url("/assets/fonts/nunito-v32-latin-ext-700.woff2") format("woff2");
}
@font-face {
  font-display: swap;
  font-family: "Rubik";
  font-style: normal;
  font-weight: 500;
  src: url("/assets/fonts/rubik-v31-latin_latin-ext-500.woff2") format("woff2");
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-violet-100: oklch(94.3% 0.029 294.588);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-violet-700: oklch(49.1% 0.27 292.581);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: "Nunito", sans-serif;
    --default-mono-font-family: var(--font-mono);
    --white-blue: #f9fafc;
    --light-grey: #f4f5f8;
    --grey: #919191;
    --alt-grey: #686868;
    --dark-grey: #585656;
    --black: #202020;
    --purple: #ad4eec;
    --blue: #4ea2ec;
    --orange: #ff7700;
    --darker-blue-6: rgba(6, 45, 94, 5.88%);
    --darker-blue-10: rgba(6, 45, 94, 10.2%);
    --default-heading-family: "Rubik", sans-serif;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .invisible {
    visibility: hidden;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .end-\[10px\] {
    inset-inline-end: 10px;
  }
  .-top-\[30px\] {
    top: calc(30px * -1);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-\[30px\] {
    top: 30px;
  }
  .top-\[calc\(100\%\+30px\)\] {
    top: calc(100% + 30px);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .-bottom-\[30px\] {
    bottom: calc(30px * -1);
  }
  .bottom-\[30px\] {
    bottom: 30px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-1 {
    z-index: 1;
  }
  .z-2 {
    z-index: 2;
  }
  .z-6 {
    z-index: 6;
  }
  .z-8 {
    z-index: 8;
  }
  .z-10 {
    z-index: 10;
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-15 {
    margin-top: calc(var(--spacing) * 15);
  }
  .mt-\[10px\] {
    margin-top: 10px;
  }
  .mt-\[20px\] {
    margin-top: 20px;
  }
  .mt-\[30px\] {
    margin-top: 30px;
  }
  .-mr-1 {
    margin-right: calc(var(--spacing) * -1);
  }
  .-mb-\[10px\] {
    margin-bottom: calc(10px * -1);
  }
  .mb-\[18px\] {
    margin-bottom: 18px;
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-15 {
    height: calc(var(--spacing) * 15);
  }
  .h-full {
    height: 100%;
  }
  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-15 {
    width: calc(var(--spacing) * 15);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-56 {
    width: calc(var(--spacing) * 56);
  }
  .w-\[280px\] {
    width: 280px;
  }
  .w-\[310px\] {
    width: 310px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[50\%\] {
    max-width: 50%;
  }
  .max-w-\[60\%\] {
    max-width: 60%;
  }
  .max-w-\[310px\] {
    max-width: 310px;
  }
  .max-w-\[1170px\] {
    max-width: 1170px;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-top-left {
    transform-origin: top left;
  }
  .origin-top-right {
    transform-origin: top right;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-\[10px\] {
    gap: 10px;
  }
  .gap-\[30px\] {
    gap: 30px;
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-1\.5 {
    column-gap: calc(var(--spacing) * 1.5);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-gray-100 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-100);
    }
  }
  .divide-white {
    :where(& > :not(:last-child)) {
      border-color: var(--color-white);
    }
  }
  .divide-white\/10 {
    :where(& > :not(:last-child)) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-\[5px\] {
    border-radius: 5px;
  }
  .rounded-\[21px\] {
    border-radius: 21px;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t-1 {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-\[\#e3e3e3\] {
    border-color: #e3e3e3;
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-t-indigo-500 {
    border-top-color: var(--color-indigo-500);
  }
  .bg-\[var\(--blue\)\]\/10 {
    background-color: color-mix(in srgb, #4ea2ec 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--blue) 10%, transparent);
    }
  }
  .bg-\[var\(--light-blue\)\] {
    background-color: var(--light-blue);
  }
  .bg-\[var\(--light-grey\)\] {
    background-color: var(--light-grey);
  }
  .bg-\[var\(--orange\)\]\/10 {
    background-color: color-mix(in srgb, #ff7700 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--orange) 10%, transparent);
    }
  }
  .bg-\[var\(--purple\)\] {
    background-color: var(--purple);
  }
  .bg-\[var\(--purple\)\]\/10 {
    background-color: color-mix(in srgb, #ad4eec 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--purple) 10%, transparent);
    }
  }
  .bg-\[var\(--purple\)\]\/60 {
    background-color: color-mix(in srgb, #ad4eec 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--purple) 60%, transparent);
    }
  }
  .bg-\[var\(--white-blue\)\] {
    background-color: var(--white-blue);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-violet-100 {
    background-color: var(--color-violet-100);
  }
  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .fill-red-500 {
    fill: var(--color-red-500);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-\[10px\] {
    padding-inline: 10px;
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-\[9px\] {
    padding-block: 9px;
  }
  .pe-10 {
    padding-inline-end: calc(var(--spacing) * 10);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-\[10px\] {
    padding-top: 10px;
  }
  .pt-\[30px\] {
    padding-top: 30px;
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-\[20px\]\/\[24px\] {
    font-size: 20px;
    line-height: 24px;
  }
  .text-\[22px\]\/\[26px\] {
    font-size: 22px;
    line-height: 26px;
  }
  .text-\[22px\]\/\[31px\] {
    font-size: 22px;
    line-height: 31px;
  }
  .text-\[26px\]\/\[31px\] {
    font-size: 26px;
    line-height: 31px;
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xl\/\[24px\] {
    font-size: var(--text-xl);
    line-height: 24px;
  }
  .text-\[26px\] {
    font-size: 26px;
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[var\(--black\)\] {
    color: var(--black);
  }
  .text-\[var\(--dark-grey\)\] {
    color: var(--dark-grey);
  }
  .text-\[var\(--grey\)\] {
    color: var(--grey);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .placeholder-\[var\(--dark-grey\)\] {
    &::placeholder {
      color: var(--dark-grey);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .shadow-\[0px_2px_4px_0px_var\(--darker-blue-10\)\] {
    --tw-shadow: 0px 2px 4px 0px var(--tw-shadow-color, var(--darker-blue-10));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0px_3px_20px_0px_var\(--darker-blue-10\)\] {
    --tw-shadow: 0px 3px 20px 0px var(--tw-shadow-color, var(--darker-blue-10));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0px_20px_50px_0px_var\(--darker-blue-6\)\] {
    --tw-shadow: 0px 20px 50px 0px var(--tw-shadow-color, var(--darker-blue-6));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0px_20px_50px_0px_var\(--darker-blue-10\)\] {
    --tw-shadow: 0px 20px 50px 0px var(--tw-shadow-color, var(--darker-blue-10));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0px_20px_50px_0px_var\(--transparentdarkerbluetransparent10\)\] {
    --tw-shadow: 0px 20px 50px 0px var(--tw-shadow-color, var(--transparentdarkerbluetransparent10));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-black {
    --tw-ring-color: var(--color-black);
  }
  .ring-white {
    --tw-ring-color: var(--color-white);
  }
  .ring-white\/5 {
    --tw-ring-color: color-mix(in srgb, #fff 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .-outline-offset-1 {
    outline-offset: calc(1px * -1);
  }
  .outline-white {
    outline-color: var(--color-white);
  }
  .outline-white\/10 {
    outline-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[scale\] {
    transition-property: scale;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\] {
    transition-property: width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .\[transition-behavior\:allow-discrete\] {
    transition-behavior: allow-discrete;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .\[--anchor-gap\:theme\(spacing\.2\)\] {
    --anchor-gap: 0.5rem;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .group-hover\:pointer-events-auto {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        pointer-events: auto;
      }
    }
  }
  .group-hover\:visible {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .group-hover\:w-full {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        width: 100%;
      }
    }
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:bg-\[var\(--purple\)\]\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #ad4eec 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--purple) 10%, transparent);
        }
      }
    }
  }
  .group-hover\:bg-violet-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-violet-600);
      }
    }
  }
  .group-hover\:text-\[red\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: red;
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-focus\:text-\[red\] {
    &:is(:where(.group):focus *) {
      color: red;
    }
  }
  .group-focus\:outline-2 {
    &:is(:where(.group):focus *) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .group-focus\:outline-offset-2 {
    &:is(:where(.group):focus *) {
      outline-offset: 2px;
    }
  }
  .group-focus\:outline-violet-500 {
    &:is(:where(.group):focus *) {
      outline-color: var(--color-violet-500);
    }
  }
  .group-active\:bg-violet-700 {
    &:is(:where(.group):active *) {
      background-color: var(--color-violet-700);
    }
  }
  .group-active\:text-\[red\] {
    &:is(:where(.group):active *) {
      color: red;
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:start-0 {
    &::before {
      content: var(--tw-content);
      inset-inline-start: calc(var(--spacing) * 0);
    }
  }
  .before\:z-0 {
    &::before {
      content: var(--tw-content);
      z-index: 0;
    }
  }
  .before\:block {
    &::before {
      content: var(--tw-content);
      display: block;
    }
  }
  .before\:h-15 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 15);
    }
  }
  .before\:w-15 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 15);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:bg-\[var\(--purple\)\]\/10 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #ad4eec 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--purple) 10%, transparent);
      }
    }
  }
  .before\:bg-\[var\(--purple\)\]\/60 {
    &::before {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #ad4eec 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--purple) 60%, transparent);
      }
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .group-hover\:before\:bg-\[var\(--purple\)\]\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          background-color: color-mix(in srgb, #ad4eec 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--purple) 10%, transparent);
          }
        }
      }
    }
  }
  .group-hover\:before\:bg-red-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          background-color: var(--color-red-500);
        }
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-700);
      }
    }
  }
  .hover\:bg-violet-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-600);
      }
    }
  }
  .hover\:bg-white\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .hover\:text-\[red\] {
    &:hover {
      @media (hover: hover) {
        color: red;
      }
    }
  }
  .focus\:bg-gray-700 {
    &:focus {
      background-color: var(--color-gray-700);
    }
  }
  .focus\:bg-white\/5 {
    &:focus {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .focus\:text-white {
    &:focus {
      color: var(--color-white);
    }
  }
  .focus\:outline-2 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus\:outline-offset-2 {
    &:focus {
      outline-offset: 2px;
    }
  }
  .focus\:outline-violet-500 {
    &:focus {
      outline-color: var(--color-violet-500);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:bg-violet-600 {
    &:active {
      background-color: var(--color-violet-600);
    }
  }
  .active\:bg-violet-700 {
    &:active {
      background-color: var(--color-violet-700);
    }
  }
  .data-\[closed\]\:scale-95 {
    &[data-closed] {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .data-\[closed\]\:transform {
    &[data-closed] {
      transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  .data-\[closed\]\:opacity-0 {
    &[data-closed] {
      opacity: 0%;
    }
  }
  .data-\[enter\]\:duration-100 {
    &[data-enter] {
      --tw-duration: 100ms;
      transition-duration: 100ms;
    }
  }
  .data-\[enter\]\:ease-out {
    &[data-enter] {
      --tw-ease: var(--ease-out);
      transition-timing-function: var(--ease-out);
    }
  }
  .data-\[leave\]\:duration-75 {
    &[data-leave] {
      --tw-duration: 75ms;
      transition-duration: 75ms;
    }
  }
  .data-\[leave\]\:ease-in {
    &[data-leave] {
      --tw-ease: var(--ease-in);
      transition-timing-function: var(--ease-in);
    }
  }
  .sm\:mt-10 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .sm\:mt-15 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 15);
    }
  }
  .sm\:mt-\[40px\] {
    @media (width >= 40rem) {
      margin-top: 40px;
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:w-\[310px\] {
    @media (width >= 40rem) {
      width: 310px;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:text-\[26px\]\/\[31px\] {
    @media (width >= 40rem) {
      font-size: 26px;
      line-height: 31px;
    }
  }
  .md\:order-1 {
    @media (width >= 48rem) {
      order: 1;
    }
  }
  .md\:mt-15 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 15);
    }
  }
  .md\:max-w-\[270px\] {
    @media (width >= 48rem) {
      max-width: 270px;
    }
  }
  .md\:max-w-none {
    @media (width >= 48rem) {
      max-width: none;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:text-\[26px\]\/\[31px\] {
    @media (width >= 48rem) {
      font-size: 26px;
      line-height: 31px;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .\[\&_a\]\:flex {
    & a {
      display: flex;
    }
  }
  .\[\&_a\]\:items-center {
    & a {
      align-items: center;
    }
  }
  .\[\&_a\]\:gap-\[10px\] {
    & a {
      gap: 10px;
    }
  }
  .\[\&_a\]\:rounded-md {
    & a {
      border-radius: var(--radius-md);
    }
  }
  .\[\&_a\]\:fill-\[red\] {
    & a {
      fill: red;
    }
  }
  .\[\&_a\]\:p-\[10px\] {
    & a {
      padding: 10px;
    }
  }
  .\[\&_a\]\:leading-\[22px\] {
    & a {
      --tw-leading: 22px;
      line-height: 22px;
    }
  }
  .\[\&_a\]\:text-\[var\(--alt-grey\)\] {
    & a {
      color: var(--alt-grey);
    }
  }
  .\[\&_a\]\:transition-\[background\] {
    & a {
      transition-property: background;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&_a\]\:transition-\[color\] {
    & a {
      transition-property: color;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&_a\]\:transition-\[font-weight\] {
    & a {
      transition-property: font-weight;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&_a\]\:hover\:bg-\[red\] {
    & a {
      &:hover {
        @media (hover: hover) {
          background-color: red;
        }
      }
    }
  }
  .\[\&_a\]\:hover\:bg-\[var\(--light-grey\)\] {
    & a {
      &:hover {
        @media (hover: hover) {
          background-color: var(--light-grey);
        }
      }
    }
  }
  .\[\&_a\]\:hover\:font-bold {
    & a {
      &:hover {
        @media (hover: hover) {
          --tw-font-weight: var(--font-weight-bold);
          font-weight: var(--font-weight-bold);
        }
      }
    }
  }
  .\[\&_a\]\:hover\:text-\[red\] {
    & a {
      &:hover {
        @media (hover: hover) {
          color: red;
        }
      }
    }
  }
  .\[\&_a\]\:hover\:text-\[var\(--orange\)\] {
    & a {
      &:hover {
        @media (hover: hover) {
          color: var(--orange);
        }
      }
    }
  }
  .\[\&_a\]\:focus\:font-bold {
    & a {
      &:focus {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
      }
    }
  }
  .\[\&_a\]\:focus\:text-\[var\(--orange\)\] {
    & a {
      &:focus {
        color: var(--orange);
      }
    }
  }
  .\[\&_a\]\:active\:font-bold {
    & a {
      &:active {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
      }
    }
  }
  .\[\&_a\]\:active\:text-\[var\(--orange\)\] {
    & a {
      &:active {
        color: var(--orange);
      }
    }
  }
  .\[\&_a_svg\]\:fill-\[red\] {
    & a svg {
      fill: red;
    }
  }
  .\[\&_a_svg\]\:group-hover\:fill-red-200 {
    & a svg {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-red-200);
        }
      }
    }
  }
  .\[\&_li\]\:flex {
    & li {
      display: flex;
    }
  }
  .\[\&_li\]\:items-center {
    & li {
      align-items: center;
    }
  }
  .\[\&_li\]\:gap-3 {
    & li {
      gap: calc(var(--spacing) * 3);
    }
  }
  .\[\&_li\]\:gap-\[10px\] {
    & li {
      gap: 10px;
    }
  }
  .\[\&_li\]\:p-\[10px\] {
    & li {
      padding: 10px;
    }
  }
  .\[\&_li\]\:py-\[10px\] {
    & li {
      padding-block: 10px;
    }
  }
  .\[\&_li\]\:leading-\[22px\] {
    & li {
      --tw-leading: 22px;
      line-height: 22px;
    }
  }
  .\[\&_li\]\:leading-\[30px\] {
    & li {
      --tw-leading: 30px;
      line-height: 30px;
    }
  }
  .\[\&_li\]\:leading-\[32px\] {
    & li {
      --tw-leading: 32px;
      line-height: 32px;
    }
  }
  .\[\&_li_a\]\:flex {
    & li a {
      display: flex;
    }
  }
  .\[\&_svg\]\:fill-\[red\] {
    & svg {
      fill: red;
    }
  }
  .\[\&_svg\]\:fill-\[var\(--grey\)\] {
    & svg {
      fill: var(--grey);
    }
  }
  .\[\&_svg\]\:fill-red-500 {
    & svg {
      fill: var(--color-red-500);
    }
  }
  .\[\&_svg\]\:transition-\[fill\] {
    & svg {
      transition-property: fill;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\[\&_svg\]\:group-hover\:fill-\[var\(--orange\)\] {
    & svg {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--orange);
        }
      }
    }
  }
  .\[\&_svg\]\:group-hover\:fill-red-200 {
    & svg {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-red-200);
        }
      }
    }
  }
  .\[\&_svg\]\:group-focus\:fill-\[var\(--orange\)\] {
    & svg {
      &:is(:where(.group):focus *) {
        fill: var(--orange);
      }
    }
  }
  .\[\&_svg\]\:group-active\:fill-\[var\(--orange\)\] {
    & svg {
      &:is(:where(.group):active *) {
        fill: var(--orange);
      }
    }
  }
  .\[li\]\:flex {
    &:is(li) {
      display: flex;
    }
  }
  .\[li\]\:bg-red-500 {
    &:is(li) {
      background-color: var(--color-red-500);
    }
  }
  .\[\&\>li\]\:flex {
    &>li {
      display: flex;
    }
  }
  .\[\&\>li\]\:gap-3 {
    &>li {
      gap: calc(var(--spacing) * 3);
    }
  }
  .\[\&\>li\]\:bg-red-500 {
    &>li {
      background-color: var(--color-red-500);
    }
  }
  .\[\&\>p\]\:bg-red-500 {
    &>p {
      background-color: var(--color-red-500);
    }
  }
}
h1, h2, h3, h4, h5, h6 {
  font-family: var(--default-heading-family);
  font-weight: 500;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-content: "";
      --tw-leading: initial;
    }
  }
}
